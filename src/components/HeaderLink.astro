---
const {href, icon: iconClass, menuChildren, target, ...props} = Astro.props;
import getUrl from "@/utils/getUrl";

const {pathname} = Astro.url;
let hrefMath = href.split('/')
let pathnameMatch = pathname.split('/')
const isActive = hrefMath[1] === pathnameMatch[1]
const children = menuChildren || [];
---
<div class="box relative h-10 w-auto flex items-center">
  <a href={getUrl(href)} target={target} class:list={[isActive ? 'header-link-active' : '', 'hover:header-link-hover']} {...props}>
    <i class={iconClass}/>
    <slot/>
    {
      children.length > 0 && <i class="ri-arrow-down-s-line"></i>
    }
  </a>
  {children && children.length > 0 && (
    <div class="dropdown cursor-pointer border rounded bg-skin-fill p-4">
      <ul class="space-y-4 w-28">
        {
          children.map(child =>
            <li class="text-center hover:text-skin-active select-none">
              <i class={child.iconClass}></i>
              <a 
                target={child.target ? child.target : "_self"} 
                href={child.href}
                data-language-link="true"
                data-language-code={child.lang}
              >
                {child.name}
              </a>
            </li>
          )
        }
      </ul>
    </div>
  )}

</div>

<style>
  .dropdown {
    display: none;
    position: absolute;
    top: 100%;
    left: -40%;
  }

  .box:hover .dropdown {
    display: block;
  }

</style>

