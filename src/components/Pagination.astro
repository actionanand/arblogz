---
import {t} from '@/i18n/utils'
import getUrl from "@/utils/getUrl";
let pager = []; // 实际显示的分页组件内容
//prefixUrl : 点击页面跳转的路由地址前缀，比如/blog/1,/tags/1, /category/1等等
const {
  currentPage,
  totalPage,
  prefixUrl = getUrl("/blog/"),
} = Astro.props;

if (totalPage === 1) {
  pager = [];
} else if (totalPage <= 5) {
  pager = new Array(totalPage).fill(0).map((i, index) => index + 1);
} else {
  if (currentPage > totalPage) {
    return
  }
  let diffNextPages = 2 - (totalPage - currentPage);

  let diffPrevPages = currentPage - 1;

  if (diffNextPages <= 2 && diffNextPages >= 0) {
    pager = [
      currentPage - 2 - diffNextPages,
      currentPage - 1 - diffNextPages,
      currentPage - diffNextPages,
      currentPage + 1 - diffNextPages,
      currentPage + 2 - diffNextPages,
    ];
  } else if (diffPrevPages <= 1 && diffPrevPages >= 0) {
    pager = [1, 2, 3, 4, 5];
  } else {
    pager = [
      currentPage - 2,
      currentPage - 1,
      currentPage,
      currentPage + 1,
      currentPage + 2,
    ];
  }
}

---

<div class="flex items-center justify-center my-16 text-skin-base">
  {
    pager.length > 4 && (
      <a href={prefixUrl + "1"} class="pagination-item pagination-nav" style="font-size:18px;line-height:32px;">
        <i class="ri-skip-left-line"></i>
      </a>
    )
  }
  <!-- 当前分页数据 -->
  {
    pager.map((i) =>
      currentPage === i ? (
        <a
          class="pagination-item pagination-active"
          href={prefixUrl + i}
          style="line-height:32px;"
        >
          {i}
        </a>
      ) : (
        <a href={prefixUrl + i} class="pagination-item" style="line-height:32px;">
          {i}
        </a>
      )
    )
  }
  {
    pager.length > 4 && (
      <a
        href={prefixUrl + totalPage}
        class="pagination-item pagination-nav"
        style="font-size:18px;line-height:32px;"
      >
        <i class="ri-skip-right-line"></i>
      </a>
    )
  }
  {totalPage > 5 && <span><span data-translate="pagination.total">{t('pagination.total')}</span>{totalPage}<span data-translate="pagination.unit">{t('pagination.unit')}</span></span>}
</div>

<style>
  .pagination-item {
    @apply border mr-2 h-8 w-8 text-center leading-8 rounded cursor-pointer transition-all duration-300;
    text-decoration: none !important;
    border-color: rgb(var(--color-border));
    color: rgb(var(--color-text));
    background: rgb(var(--color-fill-secondary));
    position: relative;
    overflow: hidden;
  }

  .pagination-item:hover {
    color: rgb(var(--color-text-active)) !important;
    border-color: rgb(var(--color-border-active)) !important;
    background: rgb(var(--color-fill)) !important;
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    text-decoration: none !important;
  }

  .pagination-active {
    color: white !important;
    background: rgb(var(--color-text-active)) !important;
    border-color: rgb(var(--color-text-active)) !important;
    font-weight: 600;
    text-decoration: none !important;
    box-shadow: 0 2px 8px rgba(var(--color-text-active), 0.3);
  }

  .pagination-active:hover {
    background: rgb(var(--color-text-active)) !important;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(var(--color-text-active), 0.4);
  }

  .pagination-nav {
    width: 36px !important;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  /* Remove any text decoration for all states */
  .pagination-item,
  .pagination-item:hover,
  .pagination-item:focus,
  .pagination-item:active,
  .pagination-item:visited {
    text-decoration: none !important;
  }

  /* Ensure no underlines from parent elements */
  .pagination-item * {
    text-decoration: none !important;
  }
</style>
