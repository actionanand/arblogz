---
import dayjs from "dayjs";
import {formatDate} from "@/utils/formatDate";
import {dealLabel} from "@/utils/dealLabel";
import {t} from '@/i18n/utils'
import DraftIndicator from '@/components/DraftIndicator.astro'
import getUrl from "@/utils/getUrl";
const {title, date, category, tags, lastModified = '', draft = false, readingTime = {}} = Astro.props
const lastModifiedDate = dayjs(lastModified === '' ? date : lastModified);
const publishDate = dayjs(date);
const mostRecentDate = lastModifiedDate.isAfter(publishDate) ? lastModifiedDate : publishDate;
const mostRecent = mostRecentDate.format('YYYY-MM-DD');
const currentDate = dayjs();
---

<div class={draft ? 'draft-post-title' : ''}>
  <!-- title -->
  <div class="flex items-start gap-3 mb-3">
    <h1 class="break-all text-2xl font-bold flex-1">{title}</h1>
    <DraftIndicator isDraft={draft} variant="large" />
  </div>

  <div class="flex flex-wrap items-center my-2 text-skin-dodge">
    <!-- date -->
    {
      date &&
      <div class="mr-2"><i class="ri-calendar-2-fill mr-1"/>{formatDate(date)}</div>
    }

    <!-- draft -->
    {
      draft &&
      <div class="mr-2"><i class="ri-git-pr-draft-line mr-1"/><span data-translate="title.draft">{t('title.draft')}</span></div>
    }

    <!-- category -->
    {
      category && dealLabel(category).filter(item => item !== 'uncategorized').map((categoryName) =>
        <a href={getUrl("/category/") + categoryName} class="text-wrap break-all hover:text-skin-active mr-2"><i class="ri-folder-3-line mr-1"/>{categoryName}</a>
      )
    }

    <!-- tag -->
    {
      tags && dealLabel(tags).map((tagName) =>
        <a href={getUrl("/tags/") + tagName} class="text-wrap break-all hover:text-skin-active mr-2"><i class="ri-hashtag mr-1"/>{tagName}</a>
      )
    }

    <!-- update -->
    <!--{-->
    <!--  lastModified && (-->
    <!--    <div class="mr-2"><i class="ri-calendar-check-fill "></i>{t('post.lastUpdated')}:{lastModified}</div>-->
    <!--  )-->
    <!--}-->

    <!-- minutes -->
    {
      readingTime.minutes && readingTime.minutes !== 0 && (
        <div class="mr-2 flex items-center"><i class="ri-hourglass-fill mr-1"/>{Math.ceil(readingTime.minutes)} &nbsp; <span data-translate="title.minutes">{t('title.minutes')}</span></div>
        <div class="mr-2 flex items-center"><i class="ri-quill-pen-line mr-1"></i>{readingTime.words} &nbsp; <span data-translate="title.words">{t('title.words')}</span></div>
      )
    }
  </div>
  {
    currentDate.isAfter(mostRecentDate.add(6, 'month')) &&
    <div class="shadow w-auto flex bg-skin-card p-2 rounded text-sm"><i class="ri-error-warning-line mr-1"/>{t('post.lastUpdatedTip1')} {formatDate(mostRecent)} {t('post.lastUpdatedTip2')} </div>
  }
</div>

<style>
  .draft-post-title {
    position: relative;
    padding: 1.5rem;
    border: 2px dashed #fbbf24;
    border-radius: 0.5rem;
    background: linear-gradient(135deg, rgba(251, 191, 36, 0.05) 0%, rgba(245, 158, 11, 0.05) 100%);
    margin-bottom: 1rem;
  }

  .draft-post-title::before {
    content: 'ðŸš§ DRAFT POST - PREVIEW MODE ðŸš§';
    position: absolute;
    top: -0.75rem;
    left: 1rem;
    background: linear-gradient(135deg, #fbbf24, #f59e0b);
    color: #1f2937;
    padding: 0.25rem 0.75rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  @media (prefers-color-scheme: dark) {
    .draft-post-title {
      border-color: #fbbf24;
      background: linear-gradient(135deg, rgba(251, 191, 36, 0.1) 0%, rgba(245, 158, 11, 0.1) 100%);
    }
    
    .draft-post-title::before {
      background: linear-gradient(135deg, #fbbf24, #f59e0b);
      color: #111827;
    }
  }
</style>
