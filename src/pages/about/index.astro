---
import LegalPage from "@/layouts/LegalPage.astro";
import {t} from '@/i18n/utils';

const contactPosts = Object.values(import.meta.glob("../../components/ContactSection.md", { eager: true }));
const {Content: ContactContent} = contactPosts[0] as any;

// Function to process markdown-like syntax
function processMarkdown(text: string): string {
  return text.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
}
---

<LegalPage title={t('about.website.title')}>
  <article class="markdown-body">
    <h2 data-translate="about.website.title">{t('about.website.title')}</h2>
    <p data-translate="about.website.content" set:html={processMarkdown(t('about.website.content'))}></p>

    <h2 data-translate="about.me.title">{t('about.me.title')}</h2>
    <p data-translate="about.me.content" set:html={processMarkdown(t('about.me.content'))}></p>

    <h2 data-translate="about.other.title">{t('about.other.title')}</h2>
    <p data-translate="about.other.content" set:html={processMarkdown(t('about.other.content'))}></p>
    
    <h2 data-translate="about.legal.title">{t('about.legal.title')}</h2>
    <div class="legal-links">
      <ul>
        <li><a href="/privacy" data-translate="about.legal.privacy">{t('about.legal.privacy')}</a></li>
        <li><a href="/terms" data-translate="about.legal.terms">{t('about.legal.terms')}</a></li>
        <li><a href="/copyright" data-translate="about.legal.copyright">{t('about.legal.copyright')}</a></li>
        <li><a href="/disclaimer" data-translate="about.legal.disclaimer">{t('about.legal.disclaimer')}</a></li>
        <li><a href="/faq" data-translate="about.legal.faq">{t('about.legal.faq')}</a></li>
      </ul>
    </div>
    
    <div class="professional-divider">
      <div class="divider-line"></div>
      <div class="divider-icon">
        <i class="ri-customer-service-2-fill"></i>
      </div>
      <div class="divider-line"></div>
    </div>
    <ContactContent/>
  </article>
</LegalPage>

<script>
  // Helper function to process markdown-like syntax
  function processMarkdownText(text: string): string {
    return text.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
  }

  // Client-side translation update for about page (runs after global translation system)
  function updateAboutMarkdown() {
    // Find all about page content elements that might have markdown
    const aboutContentElements = document.querySelectorAll('[data-translate^="about."]');
    aboutContentElements.forEach(element => {
      const text = element.textContent || '';
      if (text.includes('**')) {
        element.innerHTML = processMarkdownText(text);
      }
    });
  }

  // Run markdown processing after DOM is loaded
  document.addEventListener('DOMContentLoaded', function() {
    // Run immediately and with delays to catch different loading states
    updateAboutMarkdown();
    setTimeout(updateAboutMarkdown, 50);
    setTimeout(updateAboutMarkdown, 100);
    setTimeout(updateAboutMarkdown, 200);
  });

  // Listen for language changes
  document.addEventListener('languageChanged', function() {
    setTimeout(updateAboutMarkdown, 50);
    setTimeout(updateAboutMarkdown, 150);
  });

  // Listen for language selector clicks
  document.addEventListener('click', function(e) {
    const target = e.target as HTMLElement;
    if (target && target.closest('[data-language-link]')) {
      setTimeout(updateAboutMarkdown, 50);
      setTimeout(updateAboutMarkdown, 200);
    }
  });

  // Listen for global translation updates
  window.addEventListener('translationsUpdated', function() {
    setTimeout(updateAboutMarkdown, 50);
    setTimeout(updateAboutMarkdown, 100);
  });

  // Run on page visibility change (when tab becomes active)
  document.addEventListener('visibilitychange', function() {
    if (!document.hidden) {
      setTimeout(updateAboutMarkdown, 50);
    }
  });
</script>

<style>
  .legal-links {
    margin-top: 1.5rem;
  }
  
  .legal-links ul {
    list-style: none;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: flex-start;
  }
  
  .legal-links li {
    margin: 0;
  }
  
  .legal-links a {
    display: inline-block;
    padding: 0.4rem 0.8rem;
    text-decoration: none;
    border-radius: 4px;
    font-size: 0.85rem;
    font-weight: 500;
    transition: all 0.2s ease;
    border: 1px solid var(--tw-prose-hr, #e5e7eb);
    background: #e5e7eb;
    color: var(--tw-prose-body, #374151);
  }
  
  @media (prefers-color-scheme: dark) {
    .legal-links a {
      background: var(--bg-primary, #1f2937);
      border-color: #374151;
      color: #d1d5db;
    }
  }
  
  .legal-links a:hover {
    background: #10b981;
    color: white;
    border-color: #10b981;
    transform: translateY(-1px);
  }  /* Legal Links Styling */
  .legal-link {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: 2px solid transparent;
  }
  
  .legal-link:hover {
    background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
  }
  
  /* Contact Link Styling */
  .contact-link {
    background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
    color: white;
    border: 2px solid transparent;
  }
  
  .contact-link:hover {
    background: linear-gradient(135deg, #38ef7d 0%, #11998e 100%);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(17, 153, 142, 0.3);
  }
  
  /* Add icon indicators */
  .legal-link::after {
    content: '‚öñÔ∏è';
    margin-left: 0.5rem;
    font-size: 0.75rem;
  }
  
  .contact-link::after {
    content: 'üìß';
    margin-left: 0.5rem;
    font-size: 0.75rem;
  }
  
  @media (max-width: 640px) {
    .legal-links ul {
      grid-template-columns: 1fr;
      gap: 0.75rem;
    }
    
    .legal-links a {
      padding: 0.5rem 0.75rem;
      font-size: 0.8rem;
    }
  }
  
  /* Professional Divider Styles */
  .professional-divider {
    display: flex;
    align-items: center;
    margin: 3rem 0 2rem 0;
    gap: 1rem;
  }
  
  .divider-line {
    flex: 1;
    height: 2px;
    background: linear-gradient(90deg, transparent 0%, #10b981 20%, #10b981 80%, transparent 100%);
    border-radius: 1px;
  }
  
  .divider-icon {
    background: #10b981;
    color: white;
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    box-shadow: 0 2px 8px rgba(16, 185, 129, 0.3);
  }
  
  @media (prefers-color-scheme: dark) {
    .divider-line {
      background: linear-gradient(90deg, transparent 0%, #059669 20%, #059669 80%, transparent 100%);
    }
    
    .divider-icon {
      background: #059669;
      box-shadow: 0 2px 8px rgba(5, 150, 105, 0.3);
    }
  }
</style>